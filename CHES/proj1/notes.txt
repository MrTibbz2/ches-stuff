DELIVERY SERVICE MANAGER

gonna be for delivering coffee beans because.. yum!

feature plan:
- add time, date, deliveryperson, address, orderitems (list), order total: to a queue of deliveries to be done
- add a menu integration to control orders from users and add totals based on orders, assign deliveryperson to orders based on time
- add sql to make things consistent through runs of the program 
- maybe a ui? frontend webapp? 

roadmap:
1. data movement class, basic cli
2. sql databases
3. menu to calculate order totals

main queue functions needed:
- enqueue: add items to the end of the delivery queue to be delivered later on, queued up to be delivered
- dequeue: remove the delivery after it has been delivered
- peek: view the upcoming delivery
- size(): view the number of deliveries pending
- clear(): error handeling and system reset
- peek_last(): show the latest placed delivery
- is_empty(): error handling

tinyDB:

- json based database stuff
- actual db be way better because its stored where the program isnt.. which means data safety. thats why in an actual setting thats what you'd do.
- makes things persistent between runs of the program
- also means that when a delivery is completed we can put it in a history database, so we can check back.
- maybe make the menu for products into a database, so they can be added at runtime by a user? 

- since I already have implemented the queue stuff seperately i think it would be easier just to read db on init and write to it on close.
thats not a great way to do it because crash = data loss, but should be fine.